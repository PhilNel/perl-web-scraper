.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Amazon::Signature::V4 3pm"
.TH Net::Amazon::Signature::V4 3pm "2020-10-08" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Amazon::Signature::V4 \- Implements the Amazon Web Services signature version 4, AWS4\-HMAC\-SHA256
.SH "VERSION"
.IX Header "VERSION"
Version 0.21
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Net::Amazon::Signature::V4;
\&
\&    my $sig = Net::Amazon::Signature::V4\->new( $access_key_id, $secret, $endpoint, $service );
\&    my $req = HTTP::Request\->parse( $request_string );
\&    my $signed_req = $sig\->sign( $req );
\&    ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module signs an HTTP::Request to Amazon Web Services by appending an Authorization header. Amazon Web Services signature version 4, \s-1AWS4\-HMAC\-SHA256,\s0 is used.
.PP
The primary purpose of this module is to be used by Net::Amazon::Glacier.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 7
\&    my $sig = Net::Amazon::Signature::V4\->new( $access_key_id, $secret, $endpoint, $service );
\&    my $sig = Net::Amazon::Signature::V4\->new({
\&        access_key_id => $access_key_id,
\&        secret        => $secret,
\&        endpoint      => $endpoint,
\&        service       => $service,
\&    });
.Ve
.PP
Constructs the signature object, which is used to sign requests.
.PP
Note that the access key \s-1ID\s0 is an alphanumeric string, not your account \s-1ID.\s0 The endpoint could be \*(L"eu\-west\-1\*(R", and the service could be \*(L"glacier\*(R".
.PP
Since version 0.20, parameters can be passed in a hashref. The keys \f(CW\*(C`access_key_id\*(C'\fR, \f(CW\*(C`secret\*(C'\fR, \f(CW\*(C`endpoint\*(C'\fR, and \f(CW\*(C`service\*(C'\fR are required.
\&\f(CW\*(C`security_token\*(C'\fR, if passed, will be applied to each signed request as the \f(CW\*(C`X\-Amz\-Security\-Token\*(C'\fR header.
.SS "sign"
.IX Subsection "sign"
.Vb 1
\&    my $signed_request = $sig\->sign( $request );
.Ve
.PP
Signs a request with your credentials by appending the Authorization header. \f(CW$request\fR should be an HTTP::Request. The signed request is returned.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tim Nordenfur, \f(CW\*(C`<tim at gurka.se>\*(C'\fR
.PP
Maintained by Dan Book, \f(CW\*(C`<dbook at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-Net\-Amazon\-Signature\-V4 at rt.cpan.org\*(C'\fR, or through
the web interface at <https://rt.cpan.org/Public/Bug/Report.html?Queue=Net\-Amazon\-Signature\-V4>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Net::Amazon::Signature::V4
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<https://rt.cpan.org/Public/Dist/Display.html?Name=Net\-Amazon\-Signature\-V4>
.IP "\(bu" 4
Source on GitHub
.Sp
<https://github.com/Grinnz/Net\-Amazon\-Signature\-V4>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<https://metacpan.org/release/Net\-Amazon\-Signature\-V4>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This software is copyright (c) 2012 by Tim Nordenfur.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
